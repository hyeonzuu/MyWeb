[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hi",
    "section": "",
    "text": "안녕하세요. 송현주입니다."
  },
  {
    "objectID": "index.html#홈페이지-첫-화면-입니다",
    "href": "index.html#홈페이지-첫-화면-입니다",
    "title": "Hi",
    "section": "",
    "text": "안녕하세요. 송현주입니다."
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량' : [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nimport numpy as np\np_mean = np.mean(df['가격'])\ns_mean = np.mean(df['판매량'])\np_mean\ns_mean\n\n25.0"
  },
  {
    "objectID": "hw1.html#q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "hw1.html#q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량' : [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\nimport numpy as np p_mean = np.mean(df[‘가격’]) s_mean = np.mean(df[‘판매량’]) p_mean s_mean\n```"
  },
  {
    "objectID": "hw1.html#p-q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "hw1.html#p-q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량' : [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nimport numpy as np\np_mean = np.mean(df['가격'])\ns_mean = np.mean(df['판매량'])\np_mean\ns_mean\n\n25.0"
  },
  {
    "objectID": "hw1.html#p-혼자서-해보기",
    "href": "hw1.html#p-혼자서-해보기",
    "title": "hw1",
    "section": "115p 혼자서 해보기",
    "text": "115p 혼자서 해보기"
  },
  {
    "objectID": "hw1.html#q1-mpg-데이터를-불러와-복사본을-만드세요",
    "href": "hw1.html#q1-mpg-데이터를-불러와-복사본을-만드세요",
    "title": "hw1",
    "section": "Q1 mpg 데이터를 불러와 복사본을 만드세요",
    "text": "Q1 mpg 데이터를 불러와 복사본을 만드세요\n\ndf = pd.read_csv('./data/mpg.csv')\ndf_new = df.copy()\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw1.html#q2-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-바꾸세요",
    "href": "hw1.html#q2-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-바꾸세요",
    "title": "hw1",
    "section": "Q2 복사본 데이터를 이용해 cty는 city로 hwy는 highway로 바꾸세요",
    "text": "Q2 복사본 데이터를 이용해 cty는 city로 hwy는 highway로 바꾸세요\n\ndf_new = df_new.rename(columns = {'cty' :'city'}) \ndf_new = df_new.rename(columns = {'hwy' :'highway'})"
  },
  {
    "objectID": "hw1.html#q3-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요",
    "href": "hw1.html#q3-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요",
    "title": "hw1",
    "section": "Q3 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요",
    "text": "Q3 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요\n\ndf_new.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "hw1.html#장-130p-분석-도전",
    "href": "hw1.html#장-130p-분석-도전",
    "title": "hw1",
    "section": "5장 130p 분석 도전",
    "text": "5장 130p 분석 도전"
  },
  {
    "objectID": "hw1.html#q1-데이터를-불러와-데이터-특징-파악",
    "href": "hw1.html#q1-데이터를-불러와-데이터-특징-파악",
    "title": "hw1",
    "section": "Q1 데이터를 불러와 데이터 특징 파악",
    "text": "Q1 데이터를 불러와 데이터 특징 파악\n\ndf = pd.read_csv('./data/midwest.csv')\ndf\ndf['poptotal']\n\n0       66090\n1       10626\n2       14991\n3       30806\n4        5836\n        ...  \n432    304715\n433     46104\n434     19385\n435    140320\n436     73605\nName: poptotal, Length: 437, dtype: int64"
  },
  {
    "objectID": "hw1.html#q2-poptotal전체-인구변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요",
    "href": "hw1.html#q2-poptotal전체-인구변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요",
    "title": "hw1",
    "section": "Q2 poptotal(전체 인구)변수를 total로 popasian(아시아 인구) 변수를 asian으로 수정하세요",
    "text": "Q2 poptotal(전체 인구)변수를 total로 popasian(아시아 인구) 변수를 asian으로 수정하세요\n\ndf = df.rename(columns = {'poptotal' : 'total'})\ndf = df.rename(columns = {'popasian' : 'asian'})\ndf.head()\ndf.columns\n\nIndex(['PID', 'county', 'state', 'area', 'total', 'popdensity', 'popwhite',\n       'popblack', 'popamerindian', 'asian', 'popother', 'percwhite',\n       'percblack', 'percamerindan', 'percasian', 'percother', 'popadults',\n       'perchsd', 'percollege', 'percprof', 'poppovertyknown',\n       'percpovertyknown', 'percbelowpoverty', 'percchildbelowpovert',\n       'percadultpoverty', 'percelderlypoverty', 'inmetro', 'category'],\n      dtype='object')"
  },
  {
    "objectID": "hw1.html#q3-total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하는-히스토그램을-만들어-분포를-살펴보세요",
    "href": "hw1.html#q3-total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하는-히스토그램을-만들어-분포를-살펴보세요",
    "title": "hw1",
    "section": "Q3 total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하는 히스토그램을 만들어 분포를 살펴보세요",
    "text": "Q3 total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하는 히스토그램을 만들어 분포를 살펴보세요\n\ndf['asian%'] = df['asian'] / df['total'] * 100\nimport matplotlib.pyplot as plt\ndf['asian%'].plot.hist()\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "hw1.html#q4-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그외에는-small을-부여한-파생변수를-만드세요",
    "href": "hw1.html#q4-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그외에는-small을-부여한-파생변수를-만드세요",
    "title": "hw1",
    "section": "Q4 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 ‘large’, 그외에는 ’small’을 부여한 파생변수를 만드세요",
    "text": "Q4 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 ‘large’, 그외에는 ’small’을 부여한 파생변수를 만드세요\n\nasian_mean = df['asian%'].mean()\ndf['grade'] = np.where(df['asian%'] &gt; asian_mean, 'large', 'small')\ndf\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian%\ngrade\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nlarge\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nsmall\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nsmall\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nlarge\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nlarge\n\n\n\n\n437 rows × 30 columns"
  },
  {
    "objectID": "hw1.html#q5-large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요",
    "href": "hw1.html#q5-large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요",
    "title": "hw1",
    "section": "Q5 large와 small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요",
    "text": "Q5 large와 small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요\n\ncount_grade = df['grade'].value_counts()\ncount_grade\ncount_grade.plot.bar(rot = 0)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "hw2.html#q1-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-한다.-displ이-4이하인-자동차와-5이상인-자동차-중-어떤-자동차의-hwy-평균이-더-높은지-알아보세요",
    "href": "hw2.html#q1-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-한다.-displ이-4이하인-자동차와-5이상인-자동차-중-어떤-자동차의-hwy-평균이-더-높은지-알아보세요",
    "title": "hw2",
    "section": "Q1 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 한다. displ이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy 평균이 더 높은지 알아보세요",
    "text": "Q1 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 한다. displ이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy 평균이 더 높은지 알아보세요\n\nimport numpy as np\nimport pandas as pd\n\ndf = pd.read_csv(\"./data/mpg.csv\")\ntop_displ = df.query('displ &gt;= 5')\nlow_displ = df.query('displ &lt;= 4')\ntop_displ['hwy'].mean()\nlow_displ['hwy'].mean()\n# displ &lt;= 4인 차량이  hwy가 높다\n\n25.96319018404908"
  },
  {
    "objectID": "hw2.html#q2-자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer의-cty-평균이-높은지-알아보세요.",
    "href": "hw2.html#q2-자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer의-cty-평균이-높은지-알아보세요.",
    "title": "hw2",
    "section": "Q2 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota 중 어느 manufacturer의 cty 평균이 높은지 알아보세요.",
    "text": "Q2 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota 중 어느 manufacturer의 cty 평균이 높은지 알아보세요.\n\naudi = df.query('manufacturer == \"audi\"')\ntoyota = df.query('manufacturer== \"toyota\"')\naudi['cty'].mean()\ntoyota['cty'].mean()\n# cty는 toyota가 높다\n\n18.529411764705884"
  },
  {
    "objectID": "hw2.html#q3-chevrolet-fold-honda-자동차의-고속도로-연비-평균을-알아보려-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "href": "hw2.html#q3-chevrolet-fold-honda-자동차의-고속도로-연비-평균을-알아보려-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "title": "hw2",
    "section": "Q3 chevrolet, fold, honda 자동차의 고속도로 연비 평균을 알아보려 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.",
    "text": "Q3 chevrolet, fold, honda 자동차의 고속도로 연비 평균을 알아보려 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.\n\nmpg_new = df.query('manufacturer in [\"chevrolet\", \"old\",\"honda\"]')\nmpg_new['hwy'].mean()\n\n25.321428571428573"
  },
  {
    "objectID": "hw2.html#p-q1-audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy가-높은지-알아보려고-합니다.-audi-에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차를-출력하세요.",
    "href": "hw2.html#p-q1-audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy가-높은지-알아보려고-합니다.-audi-에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차를-출력하세요.",
    "title": "hw2",
    "section": "2. 153p Q1 audi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. audi 에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차를 출력하세요.",
    "text": "2. 153p Q1 audi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. audi 에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차를 출력하세요.\n\naudi = df.query('manufacturer == \"audi\"')\naudi.sort_values('hwy', ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "my blog",
    "section": "",
    "text": "hw5\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 29, 2024\n\n\n송현주\n\n\n\n\n\n\n\n\n\n\n\n\nhw3\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\n송현주\n\n\n\n\n\n\n\n\n\n\n\n\nhw4\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\n송현주\n\n\n\n\n\n\n\n\n\n\n\n\nhw1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 17, 2024\n\n\n송현주\n\n\n\n\n\n\n\n\n\n\n\n\nhw2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 17, 2024\n\n\n송현주\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "post/hw1/hw1.html",
    "href": "post/hw1/hw1.html",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량' : [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nimport numpy as np\np_mean = np.mean(df['가격'])\ns_mean = np.mean(df['판매량'])\np_mean\ns_mean\n\n25.0"
  },
  {
    "objectID": "post/hw1/hw1.html#p-q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "post/hw1/hw1.html#p-q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량' : [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nimport numpy as np\np_mean = np.mean(df['가격'])\ns_mean = np.mean(df['판매량'])\np_mean\ns_mean\n\n25.0"
  },
  {
    "objectID": "post/hw1/hw1.html#p-혼자서-해보기",
    "href": "post/hw1/hw1.html#p-혼자서-해보기",
    "title": "hw1",
    "section": "115p 혼자서 해보기",
    "text": "115p 혼자서 해보기"
  },
  {
    "objectID": "post/hw1/hw1.html#q1-mpg-데이터를-불러와-복사본을-만드세요",
    "href": "post/hw1/hw1.html#q1-mpg-데이터를-불러와-복사본을-만드세요",
    "title": "hw1",
    "section": "Q1 mpg 데이터를 불러와 복사본을 만드세요",
    "text": "Q1 mpg 데이터를 불러와 복사본을 만드세요\n\ndf = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/MyWeb/data/mpg.csv')\ndf_new = df.copy()\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "post/hw1/hw1.html#q2-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-바꾸세요",
    "href": "post/hw1/hw1.html#q2-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-바꾸세요",
    "title": "hw1",
    "section": "Q2 복사본 데이터를 이용해 cty는 city로 hwy는 highway로 바꾸세요",
    "text": "Q2 복사본 데이터를 이용해 cty는 city로 hwy는 highway로 바꾸세요\n\ndf_new = df_new.rename(columns = {'cty' :'city'}) \ndf_new = df_new.rename(columns = {'hwy' :'highway'})"
  },
  {
    "objectID": "post/hw1/hw1.html#q3-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요",
    "href": "post/hw1/hw1.html#q3-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요",
    "title": "hw1",
    "section": "Q3 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요",
    "text": "Q3 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요\n\ndf_new.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "post/hw1/hw1.html#장-130p-분석-도전",
    "href": "post/hw1/hw1.html#장-130p-분석-도전",
    "title": "hw1",
    "section": "5장 130p 분석 도전",
    "text": "5장 130p 분석 도전"
  },
  {
    "objectID": "post/hw1/hw1.html#q1-데이터를-불러와-데이터-특징-파악",
    "href": "post/hw1/hw1.html#q1-데이터를-불러와-데이터-특징-파악",
    "title": "hw1",
    "section": "Q1 데이터를 불러와 데이터 특징 파악",
    "text": "Q1 데이터를 불러와 데이터 특징 파악\n\ndf = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/MyWeb/data/midwest.csv')\ndf\ndf['poptotal']\n\n0       66090\n1       10626\n2       14991\n3       30806\n4        5836\n        ...  \n432    304715\n433     46104\n434     19385\n435    140320\n436     73605\nName: poptotal, Length: 437, dtype: int64"
  },
  {
    "objectID": "post/hw1/hw1.html#q2-poptotal전체-인구변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요",
    "href": "post/hw1/hw1.html#q2-poptotal전체-인구변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요",
    "title": "hw1",
    "section": "Q2 poptotal(전체 인구)변수를 total로 popasian(아시아 인구) 변수를 asian으로 수정하세요",
    "text": "Q2 poptotal(전체 인구)변수를 total로 popasian(아시아 인구) 변수를 asian으로 수정하세요\n\ndf = df.rename(columns = {'poptotal' : 'total'})\ndf = df.rename(columns = {'popasian' : 'asian'})\ndf.head()\ndf.columns\n\nIndex(['PID', 'county', 'state', 'area', 'total', 'popdensity', 'popwhite',\n       'popblack', 'popamerindian', 'asian', 'popother', 'percwhite',\n       'percblack', 'percamerindan', 'percasian', 'percother', 'popadults',\n       'perchsd', 'percollege', 'percprof', 'poppovertyknown',\n       'percpovertyknown', 'percbelowpoverty', 'percchildbelowpovert',\n       'percadultpoverty', 'percelderlypoverty', 'inmetro', 'category'],\n      dtype='object')"
  },
  {
    "objectID": "post/hw1/hw1.html#q3-total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하는-히스토그램을-만들어-분포를-살펴보세요",
    "href": "post/hw1/hw1.html#q3-total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하는-히스토그램을-만들어-분포를-살펴보세요",
    "title": "hw1",
    "section": "Q3 total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하는 히스토그램을 만들어 분포를 살펴보세요",
    "text": "Q3 total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하는 히스토그램을 만들어 분포를 살펴보세요\n\ndf['asian%'] = df['asian'] / df['total'] * 100\nimport matplotlib.pyplot as plt\ndf['asian%'].plot.hist()\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "post/hw1/hw1.html#q4-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그외에는-small을-부여한-파생변수를-만드세요",
    "href": "post/hw1/hw1.html#q4-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그외에는-small을-부여한-파생변수를-만드세요",
    "title": "hw1",
    "section": "Q4 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 ‘large’, 그외에는 ’small’을 부여한 파생변수를 만드세요",
    "text": "Q4 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 ‘large’, 그외에는 ’small’을 부여한 파생변수를 만드세요\n\nasian_mean = df['asian%'].mean()\ndf['grade'] = np.where(df['asian%'] &gt; asian_mean, 'large', 'small')\ndf\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian%\ngrade\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nlarge\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nsmall\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nsmall\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nlarge\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nlarge\n\n\n\n\n437 rows × 30 columns"
  },
  {
    "objectID": "post/hw1/hw1.html#q5-large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요",
    "href": "post/hw1/hw1.html#q5-large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요",
    "title": "hw1",
    "section": "Q5 large와 small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요",
    "text": "Q5 large와 small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요\n\ncount_grade = df['grade'].value_counts()\ncount_grade\ncount_grade.plot.bar(rot = 0)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw1/hw1.html",
    "href": "posts/hw1/hw1.html",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량' : [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nimport numpy as np\np_mean = np.mean(df['가격'])\ns_mean = np.mean(df['판매량'])\np_mean\ns_mean\n\n25.0"
  },
  {
    "objectID": "posts/hw1/hw1.html#p-q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "posts/hw1/hw1.html#p-q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량' : [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nimport numpy as np\np_mean = np.mean(df['가격'])\ns_mean = np.mean(df['판매량'])\np_mean\ns_mean\n\n25.0"
  },
  {
    "objectID": "posts/hw1/hw1.html#p-혼자서-해보기",
    "href": "posts/hw1/hw1.html#p-혼자서-해보기",
    "title": "hw1",
    "section": "115p 혼자서 해보기",
    "text": "115p 혼자서 해보기"
  },
  {
    "objectID": "posts/hw1/hw1.html#q1-mpg-데이터를-불러와-복사본을-만드세요",
    "href": "posts/hw1/hw1.html#q1-mpg-데이터를-불러와-복사본을-만드세요",
    "title": "hw1",
    "section": "Q1 mpg 데이터를 불러와 복사본을 만드세요",
    "text": "Q1 mpg 데이터를 불러와 복사본을 만드세요\n\ndf = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/MyWeb/data/mpg.csv')\ndf_new = df.copy()\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/hw1.html#q2-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-바꾸세요",
    "href": "posts/hw1/hw1.html#q2-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-바꾸세요",
    "title": "hw1",
    "section": "Q2 복사본 데이터를 이용해 cty는 city로 hwy는 highway로 바꾸세요",
    "text": "Q2 복사본 데이터를 이용해 cty는 city로 hwy는 highway로 바꾸세요\n\ndf_new = df_new.rename(columns = {'cty' :'city'}) \ndf_new = df_new.rename(columns = {'hwy' :'highway'})"
  },
  {
    "objectID": "posts/hw1/hw1.html#q3-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요",
    "href": "posts/hw1/hw1.html#q3-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요",
    "title": "hw1",
    "section": "Q3 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요",
    "text": "Q3 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요\n\ndf_new.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "posts/hw1/hw1.html#장-130p-분석-도전",
    "href": "posts/hw1/hw1.html#장-130p-분석-도전",
    "title": "hw1",
    "section": "5장 130p 분석 도전",
    "text": "5장 130p 분석 도전"
  },
  {
    "objectID": "posts/hw1/hw1.html#q1-데이터를-불러와-데이터-특징-파악",
    "href": "posts/hw1/hw1.html#q1-데이터를-불러와-데이터-특징-파악",
    "title": "hw1",
    "section": "Q1 데이터를 불러와 데이터 특징 파악",
    "text": "Q1 데이터를 불러와 데이터 특징 파악\n\ndf = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/MyWeb/data/midwest.csv')\ndf\ndf['poptotal']\n\n0       66090\n1       10626\n2       14991\n3       30806\n4        5836\n        ...  \n432    304715\n433     46104\n434     19385\n435    140320\n436     73605\nName: poptotal, Length: 437, dtype: int64"
  },
  {
    "objectID": "posts/hw1/hw1.html#q2-poptotal전체-인구변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요",
    "href": "posts/hw1/hw1.html#q2-poptotal전체-인구변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요",
    "title": "hw1",
    "section": "Q2 poptotal(전체 인구)변수를 total로 popasian(아시아 인구) 변수를 asian으로 수정하세요",
    "text": "Q2 poptotal(전체 인구)변수를 total로 popasian(아시아 인구) 변수를 asian으로 수정하세요\n\ndf = df.rename(columns = {'poptotal' : 'total'})\ndf = df.rename(columns = {'popasian' : 'asian'})\ndf.head()\ndf.columns\n\nIndex(['PID', 'county', 'state', 'area', 'total', 'popdensity', 'popwhite',\n       'popblack', 'popamerindian', 'asian', 'popother', 'percwhite',\n       'percblack', 'percamerindan', 'percasian', 'percother', 'popadults',\n       'perchsd', 'percollege', 'percprof', 'poppovertyknown',\n       'percpovertyknown', 'percbelowpoverty', 'percchildbelowpovert',\n       'percadultpoverty', 'percelderlypoverty', 'inmetro', 'category'],\n      dtype='object')"
  },
  {
    "objectID": "posts/hw1/hw1.html#q3-total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하는-히스토그램을-만들어-분포를-살펴보세요",
    "href": "posts/hw1/hw1.html#q3-total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하는-히스토그램을-만들어-분포를-살펴보세요",
    "title": "hw1",
    "section": "Q3 total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하는 히스토그램을 만들어 분포를 살펴보세요",
    "text": "Q3 total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하는 히스토그램을 만들어 분포를 살펴보세요\n\ndf['asian%'] = df['asian'] / df['total'] * 100\nimport matplotlib.pyplot as plt\ndf['asian%'].plot.hist()\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw1/hw1.html#q4-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그외에는-small을-부여한-파생변수를-만드세요",
    "href": "posts/hw1/hw1.html#q4-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그외에는-small을-부여한-파생변수를-만드세요",
    "title": "hw1",
    "section": "Q4 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 ‘large’, 그외에는 ’small’을 부여한 파생변수를 만드세요",
    "text": "Q4 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 ‘large’, 그외에는 ’small’을 부여한 파생변수를 만드세요\n\nasian_mean = df['asian%'].mean()\ndf['grade'] = np.where(df['asian%'] &gt; asian_mean, 'large', 'small')\ndf\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian%\ngrade\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nlarge\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nsmall\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nsmall\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nlarge\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nlarge\n\n\n\n\n437 rows × 30 columns"
  },
  {
    "objectID": "posts/hw1/hw1.html#q5-large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요",
    "href": "posts/hw1/hw1.html#q5-large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요",
    "title": "hw1",
    "section": "Q5 large와 small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요",
    "text": "Q5 large와 small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요\n\ncount_grade = df['grade'].value_counts()\ncount_grade\ncount_grade.plot.bar(rot = 0)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw2/hw2.html#q1-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-한다.-displ이-4이하인-자동차와-5이상인-자동차-중-어떤-자동차의-hwy-평균이-더-높은지-알아보세요",
    "href": "posts/hw2/hw2.html#q1-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-한다.-displ이-4이하인-자동차와-5이상인-자동차-중-어떤-자동차의-hwy-평균이-더-높은지-알아보세요",
    "title": "hw2",
    "section": "Q1 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 한다. displ이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy 평균이 더 높은지 알아보세요",
    "text": "Q1 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 한다. displ이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy 평균이 더 높은지 알아보세요\n\nimport numpy as np\nimport pandas as pd\n\ndf = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/MyWeb/data/mpg.csv\")\ntop_displ = df.query('displ &gt;= 5')\nlow_displ = df.query('displ &lt;= 4')\ntop_displ['hwy'].mean()\nlow_displ['hwy'].mean()\n# displ &lt;= 4인 차량이  hwy가 높다\n\n25.96319018404908"
  },
  {
    "objectID": "posts/hw2/hw2.html#q2-자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer의-cty-평균이-높은지-알아보세요.",
    "href": "posts/hw2/hw2.html#q2-자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer의-cty-평균이-높은지-알아보세요.",
    "title": "hw2",
    "section": "Q2 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota 중 어느 manufacturer의 cty 평균이 높은지 알아보세요.",
    "text": "Q2 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota 중 어느 manufacturer의 cty 평균이 높은지 알아보세요.\n\naudi = df.query('manufacturer == \"audi\"')\ntoyota = df.query('manufacturer== \"toyota\"')\naudi['cty'].mean()\ntoyota['cty'].mean()\n# cty는 toyota가 높다\n\n18.529411764705884"
  },
  {
    "objectID": "posts/hw2/hw2.html#q3-chevrolet-fold-honda-자동차의-고속도로-연비-평균을-알아보려-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "href": "posts/hw2/hw2.html#q3-chevrolet-fold-honda-자동차의-고속도로-연비-평균을-알아보려-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "title": "hw2",
    "section": "Q3 chevrolet, fold, honda 자동차의 고속도로 연비 평균을 알아보려 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.",
    "text": "Q3 chevrolet, fold, honda 자동차의 고속도로 연비 평균을 알아보려 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.\n\nmpg_new = df.query('manufacturer in [\"chevrolet\", \"old\",\"honda\"]')\nmpg_new['hwy'].mean()\n\n25.321428571428573"
  },
  {
    "objectID": "posts/hw2/hw2.html#p-q1-audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy가-높은지-알아보려고-합니다.-audi-에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차를-출력하세요.",
    "href": "posts/hw2/hw2.html#p-q1-audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy가-높은지-알아보려고-합니다.-audi-에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차를-출력하세요.",
    "title": "hw2",
    "section": "2. 153p Q1 audi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. audi 에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차를 출력하세요.",
    "text": "2. 153p Q1 audi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. audi 에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차를 출력하세요.\n\naudi = df.query('manufacturer == \"audi\"')\naudi.sort_values('hwy', ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "posts/hw3/hw3.html",
    "href": "posts/hw3/hw3.html",
    "title": "hw3",
    "section": "",
    "text": "import pandas as pd\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/MyWeb/data/mpg.csv\")\n\n\n# 산점도 만들기\nimport plotly.express as px\npx.scatter(data_frame = mpg, x = \"cty\", y = \"hwy\", color = \"drv\")\n\n                                                \n\n\n\ndf = mpg.groupby('category', as_index = False)\\\n        .agg(n =('category', 'count'))\n        \ndf\npx.bar(data_frame = df, x = 'category', y = 'n', color = 'category')\n\n                                                \n\n\n\nimport plotly.express as px\npx.line(data_frame = mpg, x = \"cty\", y = \"hwy\", color = \"drv\")"
  },
  {
    "objectID": "posts/hw3/hw3.html#plotly",
    "href": "posts/hw3/hw3.html#plotly",
    "title": "hw3",
    "section": "",
    "text": "import pandas as pd\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/MyWeb/data/mpg.csv\")\n\n\n# 산점도 만들기\nimport plotly.express as px\npx.scatter(data_frame = mpg, x = \"cty\", y = \"hwy\", color = \"drv\")\n\n                                                \n\n\n\ndf = mpg.groupby('category', as_index = False)\\\n        .agg(n =('category', 'count'))\n        \ndf\npx.bar(data_frame = df, x = 'category', y = 'n', color = 'category')\n\n                                                \n\n\n\nimport plotly.express as px\npx.line(data_frame = mpg, x = \"cty\", y = \"hwy\", color = \"drv\")"
  },
  {
    "objectID": "posts/hw3/hw3.html#hw1",
    "href": "posts/hw3/hw3.html#hw1",
    "title": "hw3",
    "section": "HW1",
    "text": "HW1\n\n1-1. mpg 데이터의 cty와 hwy 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 cty, y축은 hwy로 된 산점도를 만들어보세요\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.scatterplot(data = mpg, x = \"cty\", y = \"hwy\", hue = \"drv\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n1-2. x축은 poptotal, y축은 popasian으로된 산점도를 만드세요. 전체 인구는 50만명 이하 아시안인구는 1만명 이하인 지역만 산점도에 표시되게 설정해주세요.\n\nmidwest = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/MyWeb/data/midwest.csv\")\n\nsns.scatterplot(data = midwest, x = \"poptotal\", y = \"popasian\") \\\n    #.set(xlim = [:, 50], ylim = [:, 10000])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw4/hw4.html",
    "href": "posts/hw4/hw4.html",
    "title": "hw4",
    "section": "",
    "text": "from scipy.stats import binom\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport math\n\n# loc = 3, scale = 2\ndef f(x):\n    return (1 / (2 * np.sqrt(2 * math.pi))) * np.exp(-0.5 * ((x - 3) / 2) ** 2)\n\nx = np.linspace(-3, 3, 100)\nplt.plot(x, f(x))\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw4/hw4.html#정규분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu-3-sigma-2-의-pdf를-그릴-것.",
    "href": "posts/hw4/hw4.html#정규분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu-3-sigma-2-의-pdf를-그릴-것.",
    "title": "hw4",
    "section": "",
    "text": "from scipy.stats import binom\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport math\n\n# loc = 3, scale = 2\ndef f(x):\n    return (1 / (2 * np.sqrt(2 * math.pi))) * np.exp(-0.5 * ((x - 3) / 2) ** 2)\n\nx = np.linspace(-3, 3, 100)\nplt.plot(x, f(x))\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw4/hw4.html#x-n2-32",
    "href": "posts/hw4/hw4.html#x-n2-32",
    "title": "hw4",
    "section": "X ~ N(2, 3^2)",
    "text": "X ~ N(2, 3^2)\n\nP(X &lt; 3)\n\n\nfrom scipy.stats import norm\nnorm.cdf(2, loc = 2, scale=3)\n\n0.5\n\n\n\nP(2 &lt; X &lt; 5)\n\n\n0.5 - norm.cdf(-1, 2, 3)\n\n0.3413447460685429\n\n\n\nP(X &lt; 3 or X &gt; 7)\n\n\nnorm.cdf(3, loc=2, scale=3) + (1 - norm.cdf(7, loc=2, scale=3))\n\n0.678349012091051"
  },
  {
    "objectID": "posts/hw4/hw4.html#ls-빅데이터-스쿨-학생들의-중간고사-점수는-평균이-30이고-분산이-4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "href": "posts/hw4/hw4.html#ls-빅데이터-스쿨-학생들의-중간고사-점수는-평균이-30이고-분산이-4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "title": "hw4",
    "section": "3. LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?",
    "text": "3. LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?\n\n# loc = 30, scale = 2^2\n\nnorm.ppf(0.95, 30, 2)\n\n33.28970725390295"
  },
  {
    "objectID": "posts/hw4/hw4.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오.",
    "href": "posts/hw4/hw4.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오.",
    "title": "hw4",
    "section": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오.",
    "text": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오."
  },
  {
    "objectID": "posts/hw5/hw5.html",
    "href": "posts/hw5/hw5.html",
    "title": "hw5",
    "section": "",
    "text": "##균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요.\n\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom scipy.stats import uniform\n\n\n\n\n\nx = uniform.rvs(3, 7, 20*10010).reshape(-1, 20)\n\n\n\n\ns_2\n\ns_2 = x.var(axis=1, ddof=1)\nsns.histplot(s_2, stat=\"density\")\nplt.axvline(x=np.var(x), color='green', linestyle='-', linewidth=1)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\nk_2\n\nk_2 = x.var(axis=1, ddof=0)\nsns.histplot(k_2, stat=\"density\")\nplt.axvline(x=np.var(x), color='green', linestyle='-', linewidth=1)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n진짜 모르겠다다"
  },
  {
    "objectID": "posts/hw5/hw5.html#표본-분산-계산-시-왜-n-1로-나누는지-알아보도록-하겠습니다.",
    "href": "posts/hw5/hw5.html#표본-분산-계산-시-왜-n-1로-나누는지-알아보도록-하겠습니다.",
    "title": "hw5",
    "section": "",
    "text": "##균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요.\n\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom scipy.stats import uniform\n\n\n\n\n\nx = uniform.rvs(3, 7, 20*10010).reshape(-1, 20)\n\n\n\n\ns_2\n\ns_2 = x.var(axis=1, ddof=1)\nsns.histplot(s_2, stat=\"density\")\nplt.axvline(x=np.var(x), color='green', linestyle='-', linewidth=1)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\nk_2\n\nk_2 = x.var(axis=1, ddof=0)\nsns.histplot(k_2, stat=\"density\")\nplt.axvline(x=np.var(x), color='green', linestyle='-', linewidth=1)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n진짜 모르겠다다"
  }
]