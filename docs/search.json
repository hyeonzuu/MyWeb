[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hi",
    "section": "",
    "text": "This is a Quarto website."
  },
  {
    "objectID": "index.html#홈페이지-첫-화면-입니다",
    "href": "index.html#홈페이지-첫-화면-입니다",
    "title": "Hi",
    "section": "홈페이지 첫 화면 입니다!",
    "text": "홈페이지 첫 화면 입니다!\n안녕하세요. 송현주입니다.\n깃허브 보러가기 https://github.com/hyeonzuu"
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량' : [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nimport numpy as np\np_mean = np.mean(df['가격'])\ns_mean = np.mean(df['판매량'])\np_mean\ns_mean\n\n25.0"
  },
  {
    "objectID": "hw1.html#q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "hw1.html#q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량' : [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\nimport numpy as np p_mean = np.mean(df[‘가격’]) s_mean = np.mean(df[‘판매량’]) p_mean s_mean\n```"
  },
  {
    "objectID": "hw1.html#p-q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "hw1.html#p-q1-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량' : [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nimport numpy as np\np_mean = np.mean(df['가격'])\ns_mean = np.mean(df['판매량'])\np_mean\ns_mean\n\n25.0"
  },
  {
    "objectID": "hw1.html#p-혼자서-해보기",
    "href": "hw1.html#p-혼자서-해보기",
    "title": "hw1",
    "section": "115p 혼자서 해보기",
    "text": "115p 혼자서 해보기"
  },
  {
    "objectID": "hw1.html#q1-mpg-데이터를-불러와-복사본을-만드세요",
    "href": "hw1.html#q1-mpg-데이터를-불러와-복사본을-만드세요",
    "title": "hw1",
    "section": "Q1 mpg 데이터를 불러와 복사본을 만드세요",
    "text": "Q1 mpg 데이터를 불러와 복사본을 만드세요\n\ndf = pd.read_csv('./data/mpg.csv')\ndf_new = df.copy()\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw1.html#q2-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-바꾸세요",
    "href": "hw1.html#q2-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-바꾸세요",
    "title": "hw1",
    "section": "Q2 복사본 데이터를 이용해 cty는 city로 hwy는 highway로 바꾸세요",
    "text": "Q2 복사본 데이터를 이용해 cty는 city로 hwy는 highway로 바꾸세요\n\ndf_new = df_new.rename(columns = {'cty' :'city'}) \ndf_new = df_new.rename(columns = {'hwy' :'highway'})"
  },
  {
    "objectID": "hw1.html#q3-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요",
    "href": "hw1.html#q3-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요",
    "title": "hw1",
    "section": "Q3 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요",
    "text": "Q3 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요\n\ndf_new.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "hw1.html#장-130p-분석-도전",
    "href": "hw1.html#장-130p-분석-도전",
    "title": "hw1",
    "section": "5장 130p 분석 도전",
    "text": "5장 130p 분석 도전"
  },
  {
    "objectID": "hw1.html#q1-데이터를-불러와-데이터-특징-파악",
    "href": "hw1.html#q1-데이터를-불러와-데이터-특징-파악",
    "title": "hw1",
    "section": "Q1 데이터를 불러와 데이터 특징 파악",
    "text": "Q1 데이터를 불러와 데이터 특징 파악\n\ndf = pd.read_csv('./data/midwest.csv')\ndf\ndf['poptotal']\n\n0       66090\n1       10626\n2       14991\n3       30806\n4        5836\n        ...  \n432    304715\n433     46104\n434     19385\n435    140320\n436     73605\nName: poptotal, Length: 437, dtype: int64"
  },
  {
    "objectID": "hw1.html#q2-poptotal전체-인구변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요",
    "href": "hw1.html#q2-poptotal전체-인구변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요",
    "title": "hw1",
    "section": "Q2 poptotal(전체 인구)변수를 total로 popasian(아시아 인구) 변수를 asian으로 수정하세요",
    "text": "Q2 poptotal(전체 인구)변수를 total로 popasian(아시아 인구) 변수를 asian으로 수정하세요\n\ndf = df.rename(columns = {'poptotal' : 'total'})\ndf = df.rename(columns = {'popasian' : 'asian'})\ndf.head()\ndf.columns\n\nIndex(['PID', 'county', 'state', 'area', 'total', 'popdensity', 'popwhite',\n       'popblack', 'popamerindian', 'asian', 'popother', 'percwhite',\n       'percblack', 'percamerindan', 'percasian', 'percother', 'popadults',\n       'perchsd', 'percollege', 'percprof', 'poppovertyknown',\n       'percpovertyknown', 'percbelowpoverty', 'percchildbelowpovert',\n       'percadultpoverty', 'percelderlypoverty', 'inmetro', 'category'],\n      dtype='object')"
  },
  {
    "objectID": "hw1.html#q3-total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하는-히스토그램을-만들어-분포를-살펴보세요",
    "href": "hw1.html#q3-total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하는-히스토그램을-만들어-분포를-살펴보세요",
    "title": "hw1",
    "section": "Q3 total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하는 히스토그램을 만들어 분포를 살펴보세요",
    "text": "Q3 total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하는 히스토그램을 만들어 분포를 살펴보세요\n\ndf['asian%'] = df['asian'] / df['total'] * 100\nimport matplotlib.pyplot as plt\ndf['asian%'].plot.hist()\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "hw1.html#q4-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그외에는-small을-부여한-파생변수를-만드세요",
    "href": "hw1.html#q4-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그외에는-small을-부여한-파생변수를-만드세요",
    "title": "hw1",
    "section": "Q4 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 ‘large’, 그외에는 ’small’을 부여한 파생변수를 만드세요",
    "text": "Q4 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 ‘large’, 그외에는 ’small’을 부여한 파생변수를 만드세요\n\nasian_mean = df['asian%'].mean()\ndf['grade'] = np.where(df['asian%'] &gt; asian_mean, 'large', 'small')\ndf\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian%\ngrade\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nlarge\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nsmall\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nsmall\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nlarge\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nlarge\n\n\n\n\n437 rows × 30 columns"
  },
  {
    "objectID": "hw1.html#q5-large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요",
    "href": "hw1.html#q5-large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요",
    "title": "hw1",
    "section": "Q5 large와 small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요",
    "text": "Q5 large와 small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요\n\ncount_grade = df['grade'].value_counts()\ncount_grade\ncount_grade.plot.bar(rot = 0)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  }
]